AWSTemplateFormatVersion: 2010-09-09
Description: Complete Q Business Public Sector Application with S3 theme assets, Secrets Manager, and customized web experience

Parameters:
  QBusinessApplicationName:
    Description: The name of the Q Business Application
    Type: String
    Default: GovernmentAIAssistant
    AllowedPattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
    ConstraintDescription: Must contain only alphanumeric characters, hyphens, and underscores
  
  SessionDurationMinutes:
    Description: Session duration in minutes for anonymous users
    Type: Number
    Default: 60
    MinValue: 15
    MaxValue: 60
  
  ThemeBucketName:
    Description: S3 bucket name for theme assets (must be globally unique)
    Type: String
    Default: qbusiness-theme
    AllowedPattern: ^[a-z0-9][a-z0-9-]*[a-z0-9]$
    ConstraintDescription: Must be a valid S3 bucket name
  
  GitHubRepository:
    Description: GitHub repository URL (optional - for automatic deployment)
    Type: String
    Default: ''
  
  GitHubAccessToken:
    Description: GitHub personal access token (optional - for automatic deployment)
    Type: String
    Default: ''
    NoEcho: true
  
  GitHubBranch:
    Description: GitHub branch to deploy (optional - defaults to main)
    Type: String
    Default: main

Conditions:
  HasGitHubRepo: !Not [!Equals [!Ref GitHubRepository, '']]
  HasGitHubToken: !Not [!Equals [!Ref GitHubAccessToken, '']]

Resources:
  # IAM Role for Q Business Web Experience
  QBusinessWebExperienceServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: application.qbusiness.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
              - 'sts:SetContext'              
            Condition:
              StringEquals: 
                "aws:SourceAccount": !Sub "${AWS::AccountId}"
              ArnLike: 
                "aws:SourceArn": !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref QBusinessWebExperienceServiceManagedPolicy
      
  # Managed Policy for Web Experience
  QBusinessWebExperienceServiceManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:      
      Description: Q Web Experience Managed Policy
      Path: /service-role/
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: 
            - "qbusiness:Chat"
            - "qbusiness:ChatSync"
            - "qbusiness:PutFeedback"
            - "qbusiness:GetWebExperience"
            - "qbusiness:GetApplication"
            - "qbusiness:GetChatControlsConfiguration"           
            Resource: !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"

  # Q Business Application with Anonymous access
  QBusinessApp:
    Type: AWS::QBusiness::Application
    Properties:
      DisplayName: !Ref QBusinessApplicationName
      Description: Q Business Application with Anonymous access
      IdentityType: ANONYMOUS
      RoleArn: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/qbusiness.amazonaws.com/AWSServiceRoleForQBusiness

  # Q Business Index
  QBusinessIndex:
    Type: AWS::QBusiness::Index
    Properties:
     ApplicationId: !GetAtt QBusinessApp.ApplicationId
     DisplayName: qbusiness-index
     Type: STARTER

  # Q Business Retriever
  QBusinessRetriver:
    Type: AWS::QBusiness::Retriever
    Properties:
     ApplicationId: !GetAtt QBusinessApp.ApplicationId
     Configuration:
      NativeIndexConfiguration:
        IndexId: !GetAtt QBusinessIndex.IndexId
     DisplayName: qbusiness-retriever
     Type: NATIVE_INDEX

  # S3 Bucket for Theme Assets
  ThemeAssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 
        - '${BucketName}-${StackName}-${UniqueId}'
        - BucketName: !Ref ThemeBucketName
          StackName: !Ref 'AWS::StackName'
          UniqueId: !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref 'AWS::StackId']]]]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      VersioningConfiguration:
        Status: Enabled

  # S3 Bucket Policy for Q Business Access
  ThemeAssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ThemeAssetsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: application.qbusiness.amazonaws.com
            Action: s3:GetObject
            Resource:
              - !Sub '${ThemeAssetsBucket.Arn}/public-sector-theme.css'
              - !Sub '${ThemeAssetsBucket.Arn}/aws-logo.png'
              - !Sub '${ThemeAssetsBucket.Arn}/AmazonEmber_Bd.ttf'
              - !Sub '${ThemeAssetsBucket.Arn}/favicon.ico'
            Condition:
              Bool:
                'aws:SecureTransport': 'true'

  # Secrets Manager Secret for Q Business Configuration
  QBusinessConfigSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub 
        - 'qbusiness-config-${StackName}-${UniqueId}'
        - StackName: !Ref 'AWS::StackName'
          UniqueId: !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref 'AWS::StackId']]]]
      Description: Q Business Application and Web Experience IDs for Amplify app
      SecretString: !Sub 
        - '{"QBUSINESS_APP_ID": "${QBusinessApp.ApplicationId}", "QBUSINESS_WEB_EXP_ID": "${WebExperienceId}"}'
        - WebExperienceId: !Select [1, !Split ['|', !Ref QBusinessWebExperience]]

  # Q Business Web Experience with Government Customization
  QBusinessWebExperience:
    Type: AWS::QBusiness::WebExperience
    DependsOn: [ThemeAssetsBucket, ThemeAssetsBucketPolicy]
    Properties:
     ApplicationId: !GetAtt QBusinessApp.ApplicationId
     RoleArn: !GetAtt QBusinessWebExperienceServiceRole.Arn
     Title: Demo Government AI Assistant
     Subtitle: Providing secure information access for public sector agencies
     WelcomeMessage: Welcome to your secure AI assistant. I can help you find information from approved government resources. How may I assist you today?
     SamplePromptsControlMode: ENABLED
     CustomizationConfiguration:
       CustomCSSUrl: !Sub 'https://${ThemeBucketName}.s3.${AWS::Region}.amazonaws.com/public-sector-theme.css'

  # IAM Service Role for Amplify
  AmplifyServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-AmplifyServiceRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: amplify.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogsAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:PutLogEvents
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/amplify/*'

  # CloudWatch Log Group for Amplify
  AmplifyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/amplify/${AWS::StackName}-qbusiness-app'
      RetentionInDays: 14

  # IAM Role for Amplify Compute
  AmplifyComputeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-AmplifyComputeRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: amplify.amazonaws.com
            Action: sts:AssumeRole

      Policies:
        - PolicyName: AmplifyComputePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: PushLogs
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/amplify/*:log-stream:*'
              - Sid: CreateLogGroup
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/amplify/*'
              - Sid: DescribeLogGroups
                Effect: Allow
                Action: logs:DescribeLogGroups
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*'
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref QBusinessConfigSecret
              - Effect: Allow
                Action: qbusiness:CreateAnonymousWebExperienceUrl
                Resource:
                  - !Sub 'arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}'
                  - !Sub 
                    - 'arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}/web-experience/${WebExperienceId}'
                    - WebExperienceId: !Select [1, !Split ['|', !Ref QBusinessWebExperience]]

  # Amplify Application
  AmplifyApp:
    Type: AWS::Amplify::App
    Properties:
      Name: !Sub '${AWS::StackName}-qbusiness-app'
      Description: 'Q Business Anonymous Web Experience with Custom Theming'
      Platform: WEB_COMPUTE
      IAMServiceRole: !GetAtt AmplifyServiceRole.Arn
      ComputeRoleArn: !GetAtt AmplifyComputeRole.Arn
      Repository: !If [HasGitHubRepo, !Ref GitHubRepository, !Ref 'AWS::NoValue']
      AccessToken: !If [HasGitHubToken, !Ref GitHubAccessToken, !Ref 'AWS::NoValue']
      AutoBranchCreationConfig:
        EnableAutoBranchCreation: true
        EnableAutoBuild: true
        AutoBranchCreationPatterns:
          - !Ref GitHubBranch
      BuildSpec: |
        version: 1
        env:
          variables:
            SECRET_NAME: !Ref QBusinessConfigSecret
            SESSION_DURATION_MINUTES: !Ref SessionDurationMinutes
        frontend:
          phases:
            preBuild:
              commands:
                - nvm install 22
                - nvm use 22
                - node --version
                - npm install
            build:
              commands:
                - ./scripts/build.sh
          artifacts:
            baseDirectory: .amplify-hosting
            files:
              - '**/*'
      EnvironmentVariables:
        - Name: SECRET_NAME
          Value: !Ref QBusinessConfigSecret
        - Name: SESSION_DURATION_MINUTES
          Value: !Ref SessionDurationMinutes
      Tags:
        - Key: Project
          Value: QBusinessPublicSector
        - Key: Environment
          Value: Production

  # Amplify Branch
  AmplifyBranch:
    Type: AWS::Amplify::Branch
    Condition: HasGitHubRepo
    Properties:
      AppId: !GetAtt AmplifyApp.AppId
      BranchName: !Ref GitHubBranch
      EnableAutoBuild: true
      EnablePullRequestPreview: false

Outputs:
  QBusinessApplicationId:
    Description: The ID of the QBusiness application
    Value: !GetAtt QBusinessApp.ApplicationId
    Export:
      Name: !Sub '${AWS::StackName}-QBusinessAppId'
    
  QBusinessWebExperienceId:
    Description: The ID of the QBusiness web experience
    Value: !Ref QBusinessWebExperience
    Export:
      Name: !Sub '${AWS::StackName}-QBusinessWebExpId'
  
  ThemeBucketName:
    Description: S3 bucket name for theme assets
    Value: !Ref ThemeAssetsBucket
    Export:
      Name: !Sub '${AWS::StackName}-ThemeBucket'
  
  SecretsManagerSecretName:
    Description: Name of the Secrets Manager secret containing Q Business configuration
    Value: !Sub 
      - 'qbusiness-config-${StackName}-${UniqueId}'
      - StackName: !Ref 'AWS::StackName'
        UniqueId: !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref 'AWS::StackId']]]]
    Export:
      Name: !Sub '${AWS::StackName}-SecretName'
  
  AmplifyComputeRoleArn:
    Description: ARN of the IAM role for Amplify Compute
    Value: !GetAtt AmplifyComputeRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-AmplifyRoleArn'
  
  AmplifyAppId:
    Description: Amplify App ID
    Value: !GetAtt AmplifyApp.AppId
    Export:
      Name: !Sub '${AWS::StackName}-AmplifyAppId'
  
  AmplifyAppArn:
    Description: Amplify App ARN
    Value: !GetAtt AmplifyApp.Arn
    Export:
      Name: !Sub '${AWS::StackName}-AmplifyAppArn'
  
  AmplifyDefaultDomain:
    Description: Amplify App Default Domain URL (add this to Q Business allowed websites)
    Value: !Sub 'https://${GitHubBranch}.${AmplifyApp.AppId}.amplifyapp.com'
    Condition: HasGitHubRepo
    Export:
      Name: !Sub '${AWS::StackName}-AmplifyDomain'
  
  NextSteps:
    Description: Instructions for completing the deployment
    Value: |
      1. Upload theme assets to the S3 bucket using the provided script
      2. Follow AMPLIFY-SETUP.md to deploy the web application
      3. Use the AmplifyComputeRoleArn output for the Amplify IAM role
      4. Add your Amplify domain to Q Business allowed URLs